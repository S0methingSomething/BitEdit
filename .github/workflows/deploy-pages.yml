# .github/workflows/deploy-pages.yml

# Name of the workflow
name: Deploy BitEdit to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the permissions for the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, canceling any in-progress runs
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build and Test job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install HTML Validator
        run: npm install -g html-validator-cli

      - name: Validate HTML # <-- THIS STEP IS CORRECTED
        # Find all HTML files in the BitEdit directory and run the validator on each one.
        run: find ./BitEdit -name "*.html" -exec html-validator --file={} --verbose \;

      - name: Install and run a local server for testing
        run: |
          npm install -g http-server
          http-server ./BitEdit &
          sleep 5 # Give the server a moment to start

      - name: Test if the site is renderable with cURL
        run: curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080 | grep 200

      - name: Check for broken links
        uses: lycheeverse/lychee-action@v1.10.0
        with:
          # This scans all HTML files recursively in the BitEdit directory
          args: --verbose --no-progress './BitEdit/**/*.html'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './BitEdit'

  # Deployment job
  deploy:
    # Requires the build job to have completed successfully
    needs: build

    # Grant GITHUB_TOKEN the permissions required to deploy to Pages
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
