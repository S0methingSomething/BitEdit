name: Check BitLife Version and Update File

on:
  schedule:
    # Runs at 2 AM UTC every Sunday, which is 10 AM on Sunday in the Philippines (PHT).
    - cron: '0 2 * * 0'
  workflow_dispatch:

permissions:
  contents: write
  variables: write

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    
    env:
      LAST_KNOWN_VERSION: ${{ vars.LATEST_BITLIFE_VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies from specific path
        run: pip install -r BitEdit/Get_Bitlife_Version/requirements.txt

      - name: Scrape for current version
        id: scrape
        run: echo "current_version=$(python BitEdit/Get_Bitlife_Version/Get_version.py)" >> $GITHUB_OUTPUT

      - name: Debug - Print Scraped Version
        run: echo "The captured version is: ${{ steps.scrape.outputs.current_version }}"

      - name: Create file if new version is found
        if: steps.scrape.outputs.current_version && steps.scrape.outputs.current_version != env.LAST_KNOWN_VERSION
        run: |
          echo "New version found: ${{ steps.scrape.outputs.current_version }}. Creating file..."
          echo "${{ steps.scrape.outputs.current_version }}" > BitEdit/Get_Bitlife_Version/version.txt

      - name: Commit new version file
        if: steps.scrape.outputs.current_version && steps.scrape.outputs.current_version != env.LAST_KNOWN_VERSION
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ðŸš€ Update BitLife version to ${{ steps.scrape.outputs.current_version }}"
          file_pattern: 'BitEdit/Get_Bitlife_Version/version.txt'
          
      - name: Update repository variable with new version
        if: steps.scrape.outputs.current_version && steps.scrape.outputs.current_version != env.LAST_KNOWN_VERSION
        run: |
          echo "Updating LATEST_BITLIFE_VERSION variable to ${{ steps.scrape.outputs.current_version }}"
          gh variable set LATEST_BITLIFE_VERSION --body "${{ steps.scrape.outputs.current_version }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
